#создай здесь свой индивидуальный проект!
import pandas as pd
import matplotlib.pyplot as plt
df = pd.read_csv('train.csv')
df.drop(['id', 'has_photo', 'occupation_type', 'bdate', 'has_mobile', 'followers_count', 'education_status', 'life_main', 'people_main', 'city', 'last_seen', 'occupation_name', 'career_start', 'career_end', 'education_form'],  axis = 1, inplace = True)

def split_Langs(langs):
    return langs.split(';')
df['langs'] = df['langs'].apply(split_Langs)
df['langs'] = df['langs'] = df['langs'].apply(len)



male = 0
female = 0
male_students = 0
female_students = 0
def sex_count(row):
    global male, female, male_students, female_students
    if row['sex'] == 1:
        male += 1
        if row['result'] == 1:
            male_students += 1
    elif row['sex'] == 2:
        female += 1
        if row['result'] == 1:
            female_students += 1
df.apply(sex_count, axis = 1)
male_procent = male_students/(male+female)
female_procent = female_students/(male+female)
s = pd.Series(index = ['Мужчины', 'Женщины'], data = [male_procent, female_procent])
s.plot(kind = 'pie')
plt.show()
  
# Шаг 2. Создание модели
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.neighbors import KNeighborsClassifier
from sklearn.metrics import confusion_matrix, accuracy_score
 
X = df.drop('result', axis = 1)
y = df['result']
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.25)
 
sc = StandardScaler()
X_train = sc.fit_transform(X_train)
X_test = sc.transform(X_test)
classifier = KNeighborsClassifier(n_neighbors = 5)
classifier.fit(X_train, y_train)
 
y_pred = classifier.predict(X_test)
print(y_test)
print(y_pred)
print('Confusion matrix:')
print(confusion_matrix(y_test, y_pred))

print('Процент правильно предсказанных исходов:', round(accuracy_score(y_test, y_pred) * 100, 2))
